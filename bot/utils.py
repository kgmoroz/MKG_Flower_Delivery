import asyncio
import os
from django.conf import settings
from telegram import Bot
from urllib.parse import urljoin
from django.conf import settings
from django.urls import reverse

bot = Bot(token=settings.TELEGRAM_BOT_TOKEN)


def send_order_status_update(order):
    """
    –£–≤–µ–¥–æ–º–ª—è–µ—Ç –≤ Telegram –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞.
    –§–æ—Ä–º–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: –ò–º—è –§–∞–º–∏–ª–∏—è (username)
    """
    # —Å–æ–±–∏—Ä–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    full_name = order.user.get_full_name().strip() or order.user.username
    user_line = f"{full_name} ({order.user.username})"

    # —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
    text = (
        f"üîî –û–±–Ω–æ–≤–ª—ë–Ω —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ #{order.id}:\n"
        f"{order.get_status_display()}\n"
        f"{user_line}\n"
        f"–ê–¥—Ä–µ—Å: {order.delivery_address}\n"
        f"–î–∞—Ç–∞/–≤—Ä–µ–º—è: {order.delivery_date} {order.delivery_time}"
    )

    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —Å–≤–æ—ë–º loop, –∑–∞—â–∏—â–∞—è—Å—å –æ—Ç –æ—à–∏–±–æ–∫
    try:
        loop = asyncio.new_event_loop()
        asyncio.set_event_loop(loop)
        loop.run_until_complete(
            bot.send_message(chat_id=settings.TELEGRAM_CHAT_ID, text=text)
        )
    except Exception as e:
        print(f"Telegram status update failed: {e!r}")
    finally:
        loop.close()


def send_new_order_notification(order, base_url: str):
    """
    –°–∏–Ω—Ö—Ä–æ–Ω–Ω–æ —Å–æ–±–∏—Ä–∞–µ—Ç —Ç–µ–∫—Å—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ Telegram.
    –ö–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Ö–æ–¥–∏—Ç –≤ —Å–≤–æ—ë–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–º event loop, —á—Ç–æ–±—ã
    –Ω–µ –ª–æ–º–∞—Ç—å—Å—è –∏–∑-–∑–∞ ¬´Event loop is closed¬ª.
    """
    chat_id = settings.TELEGRAM_CHAT_ID

    # ‚Äî 1) –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ‚Äî
    lines = [
        f"üÜï –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ #{order.id}",
        # —Ñ–æ—Ä–º–∞—Ç ¬´–ò–º—è –§–∞–º–∏–ª–∏—è (username)¬ª
        *(lambda user: (
            [f"{(user.get_full_name().strip() or user.username)} ({user.username})"]
        ))(order.user),
        "",
        "üì¶ –°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:"
    ]
    total = 0
    for item in order.items.select_related('product').all():
        lines.append(f"- {item.product.name}: {item.quantity} √ó {item.price} ‚ÇΩ")
        total += item.quantity * item.price

    lines += [
        "",
        f"üí∞ –í—Å–µ–≥–æ: {total:.2f} ‚ÇΩ",
        "",
        f"üìÖ –î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏: {order.delivery_date} {order.delivery_time}",
        f"üè† –ê–¥—Ä–µ—Å: {order.delivery_address}",
    ]
    text = "\n".join(lines)

    # ‚Äî 2) –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram –≤ —Å–≤–æ—ë–º event loop ‚Äî
    try:
        loop = asyncio.new_event_loop()
        asyncio.set_event_loop(loop)
        loop.run_until_complete(bot.send_message(chat_id=chat_id, text=text))
    except Exception as e:
        # —á—Ç–æ–±—ã checkout –Ω–µ –ø–∞–¥–∞–ª, –ø—Ä–æ—Å—Ç–æ –≤—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å
        print(f"Telegram notification failed: {e!r}")
    finally:
        loop.close()